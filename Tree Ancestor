public class tree_ancestor {
    public static class Node{
        int data;Node left,right;
        public Node(int data)
        {
            this.data=data;
            this.left=null;
            this.right=null;

        }
        


    }
    public static Node root;public int k;
   
    public int kthancestor(Node root,int n, int k)

    {
        if (root == null) {
            return -1;
        }

        if (root.data == n) {
            return k--;
        } else {
            if (Math.max(kthancestor(root.left, n, k), kthancestor(root.right, n, k)) == 0) {
                System.out.println("Found the ancestor " + root.data);
                return -1;
            } else {
                return Math.max(kthancestor(root.left, n, k), kthancestor(root.right, n, k)) -1;
            }
        }
    }
    public static void main(String args[])
    {
        tree_ancestor ob=new tree_ancestor();
        int k=1,n=7; 
        root=new Node(1);
        root.left = new Node(2); 
        root.right = new Node(3); 
        root.left.left = new Node(4); 
        root.left.right = new Node(5);
        root.left.right.left = new Node(6);
        root.left.right.right = new Node(7);
        if (ob.kthancestor(root, n,k) >= 0) {
            System.out.println("Not Found");
        } else {
            System.out.println("Found");
        }
        
    }

    
}
