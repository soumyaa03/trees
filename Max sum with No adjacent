import java.util.HashMap;

public class maxsum_noadjacent {
    public static class Node{
        int data;Node left,right;
        public Node(int data)
        {
            this.data=data;
            this.left=null;
            this.right=null;
        }

    }
    public Node root;public int inc,exc;HashMap<Node,Integer> mp=new HashMap<>();
    int maxsum(Node root)
    {
        if(root==null)return 0;
        if(mp.containsKey(root))
        return mp.get(root);
        inc=root.data;

        if(root.left!=null)
        {
            inc +=maxsum(root.left.left);
            inc +=maxsum(root.left.right);

        }

        if(root.right!=null)
        {
            inc +=maxsum(root.right.left);
            inc +=maxsum(root.right.right);

        }

        exc= sum(root.left) + sum(root.right);
        mp.put(root,Math.max(inc,exc));
        return mp.get(root);
        
        
         

    }
    int sum(Node root)
    {
        if(root==null)
        return 0;
       int inc=root.data;

        if(root.left!=null)
        {
            inc +=sum(root.left.left);
            inc +=sum(root.left.right);

        }

        if(root.right!=null)
        {
            inc +=sum(root.right.left);
            inc +=sum(root.right.right);

        }
        return inc;

       

    }
    public static void main(String args[])
    {
        maxsum_noadjacent ob=new maxsum_noadjacent();
        Node root = new Node(1); 
        root.left = new Node(2); 
        root.right = new Node(3); 
        root.right.left = new Node(4); 
        root.right.right = new Node(5); 
        root.left.left = new Node(1);     
        System.out.print(ob.maxsum(root));
    }
    
}
