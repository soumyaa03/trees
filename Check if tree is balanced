public class ifbalanced {
    public static class Node{
        int data;
        Node left;
        Node right;

        public Node(int data)
        {
            this.data=data;
            this.left=null;
            this.right=null;

        }

    }

    
    public Node root;
    public static int diff;
    ifbalanced(){
        root=null;
    }

    
    void inorder(Node in)
    {
        if(in==null)
        return;
        else{
            inorder(in.left);
            System.out.println(in.data+" ");
            inorder(in.right);
        }
        

    }
    int checkisbalanced(Node temp)
    {
        if(root==null)
        {
            System.out.println("TREE IS EMPTY");
            return -1;

        }
        else{
            int leftheight=0,rightheight=0;
            if(temp.left!=null)
            leftheight=checkisbalanced(temp.left);
            if(temp.right!=null)
            rightheight=checkisbalanced(temp.right);
            int max = (leftheight > rightheight) ? leftheight : rightheight;  
  
              
            return (max + 1);  
          
        }


    }
    public static void main(String args[])
    {
        ifbalanced ob=new ifbalanced();
        ob.root = new Node(1);  
        ob.root.left = new Node(2);  
        ob.root.right = new Node(3);  
        ob.root.left.left = new Node(4);  
        ob.root.right.left = new Node(5);  
        ob.root.right.right = new Node(6);  
        ob.root.right.right.right= new Node(7);  
        ob.root.right.right.right.right = new Node(8);
        int lheight=ob.checkisbalanced(ob.root.left);
        int rheight=ob.checkisbalanced(ob.root.right);

        if((lheight-rheight)==0 || (lheight-rheight)==1)
        System.out.println("The tree is balanced");  
        else
        System.out.println("The tree is not balanced"); 
       
    System.out.println(lheight-rheight);
  

    }
}
